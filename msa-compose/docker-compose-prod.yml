version: "3.7"
services:
  zookeeper:
    restart: always
    image: wurstmeister/zookeeper
    platform: linux/amd64
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      my-network:
        ipv4_address: 172.18.0.100

  kafka:
    restart: always
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.18.0.101
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      my-network:
        ipv4_address: 172.18.0.101

  zipkin:
    restart: always
    container_name: zipkin
    image: openzipkin/zipkin
    environment:
      JAVA_OPTS: "-Xms1g -Xmx1g -XX:+ExitOnOutOfMemoryError"
    ports:
      - "9411:9411"
    networks:
      my-network:

  prometheus:
    restart: always
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - /root/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      my-network:

  grafana:
    restart: always
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - /root/config/grafana/data:/var/lib/grafana
    networks:
      my-network:

  naming-server:
    restart: always
    container_name: naming-server
    image: completed0728/naming-server:1.0
    ports:
      - "8761:8761"
    environment:
      spring.config.import: optional:configserver:http://config-server:8888
      spring.profiles.active: prod
    networks:
      my-network:

  rabbitmq:
    restart: always
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "5672:5672" # rabbitmq amqp port
      - "15672:15672" # ui manage port
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      my-network:

  mysql:
    image: mysql:8.0.33
    platform: linux/amd64
    restart: always
    command:
      - --lower_case_table_names=1
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=msa
      - MYSQL_ROOT_PASSWORD=root1234!!
      - TZ=Asia/Seoul
    volumes:
      - /root/config/mysql/database:/var/lib/mysql
    networks:
      my-network:

  config-server:
    restart: always
    container_name: config-server
    image: completed0728/config-server:1.0
    ports:
      - "8888:8888"
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.profiles.active: prod
    depends_on:
      - rabbitmq
      - mysql
    volumes:
      - /root/config/jks/client.jks:/client.jks
    networks:
      my-network:

  gateway-service:
    restart: always
    container_name: gateway-service
    image: completed0728/gateway-service:1.0
    ports:
      - "8000:8000"
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.config.import: optional:configserver:http://config-server:8888
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
      spring.redis.master.ip: 192.168.0.11
      spring.redis.slave.ip: 192.168.0.11
      spring.redis.sentinel.ip: 192.168.0.11
      spring.profiles.active: prod
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      my-network:
        ipv4_address: 172.18.0.50

  user-service:
    restart: always
    container_name: user-service
    image: completed0728/user-service:1.0
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.config.import: optional:configserver:http://config-server:8888
      management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
      spring.datasource.url: jdbc:mysql://mysql:3306/users?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
      spring.redis.master.ip: 192.168.0.11
      spring.redis.slave.ip: 192.168.0.11
      spring.redis.sentinel.ip: 192.168.0.11
      spring.profiles.active: prod
      logging.file: /api-logs/users-ws.log
    depends_on:
      - gateway-service
    networks:
      my-network:

  order-service:
    restart: always
    container_name: order-service
    image: completed0728/order-service:1.0
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.config.import: optional:configserver:http://config-server:8888
      management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
      spring.datasource.url: jdbc:mysql://mysql:3306/orders?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
      spring.profiles.active: prod
      logging.file: /api-logs/order-ws.log
    depends_on:
      - gateway-service
    networks:
      my-network:

  product-service:
    restart: always
    container_name: product-service
    image: completed0728/product-service:1.0
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.config.import: optional:configserver:http://config-server:8888
      management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
      spring.datasource.url: jdbc:mysql://mysql:3306/products?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
      spring.profiles.active: prod
      logging.file: /api-logs/product-ws.log
    depends_on:
      - gateway-service
    networks:
      my-network:

  review-service:
    restart: always
    container_name: review-service
    image: completed0728/review-service:1.0
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.config.import: optional:configserver:http://config-server:8888
      management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
      spring.datasource.url: jdbc:mysql://mysql:3306/reviews?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
      spring.profiles.active: prod
      logging.file: /api-logs/review-ws.log
    depends_on:
      - gateway-service
    networks:
      my-network:

  seller-service:
    container_name: seller-service
    image: completed0728/seller-service:1.0
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.config.import: optional:configserver:http://config-server:8888
      management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
      spring.datasource.url: jdbc:mysql://mysql:3306/managers?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
      spring.profiles.active: prod
      logging.file: /api-logs/seller-ws.log
    depends_on:
      - gateway-service
    networks:
      my-network:

  supervisor-service:
    restart: always
    container_name: supervisor-service
    image: completed0728/supervisor-service:1.0
    environment:
      spring.rabbitmq.host: rabbitmq
      spring.config.import: optional:configserver:http://config-server:8888
      management.zipkin.tracing.endpoint: http://zipkin:9411/api/v2/spans
      eureka.client.serviceUrl.defaultZone: http://naming-server:8761/eureka
      spring.datasource.url: jdbc:mysql://mysql:3306/managers?useSSL=false&useUnicode=true&allowPublicKeyRetrieval=true
      spring.profiles.active: prod
      logging.file: /api-logs/supervisor-ws.log
    depends_on:
      - gateway-service
    networks:
      my-network:

networks:
  my-network:
    external: true
    name: benefits-network